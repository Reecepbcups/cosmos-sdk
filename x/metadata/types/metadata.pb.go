// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: cosmos/metadata/v1/metadata.proto

package types

import (
	fmt "fmt"
	_ "github.com/cosmos/cosmos-sdk/types/tx/amino"
	proto "github.com/cosmos/gogoproto/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// create a other object which has an id and a string value
type ChainSpecific struct {
	Id    string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (m *ChainSpecific) Reset()         { *m = ChainSpecific{} }
func (m *ChainSpecific) String() string { return proto.CompactTextString(m) }
func (*ChainSpecific) ProtoMessage()    {}
func (*ChainSpecific) Descriptor() ([]byte, []int) {
	return fileDescriptor_7d37f040ef7097f5, []int{0}
}
func (m *ChainSpecific) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ChainSpecific) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ChainSpecific.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ChainSpecific) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChainSpecific.Merge(m, src)
}
func (m *ChainSpecific) XXX_Size() int {
	return m.Size()
}
func (m *ChainSpecific) XXX_DiscardUnknown() {
	xxx_messageInfo_ChainSpecific.DiscardUnknown(m)
}

var xxx_messageInfo_ChainSpecific proto.InternalMessageInfo

func (m *ChainSpecific) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ChainSpecific) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

// Params defines the set of module parameters.
type Params struct {
	// social media
	Twitter  string `protobuf:"bytes,1,opt,name=twitter,proto3" json:"twitter,omitempty"`
	Telegram string `protobuf:"bytes,2,opt,name=telegram,proto3" json:"telegram,omitempty"`
	Discord  string `protobuf:"bytes,3,opt,name=discord,proto3" json:"discord,omitempty"`
	// project
	Github  string `protobuf:"bytes,4,opt,name=github,proto3" json:"github,omitempty"`
	Website string `protobuf:"bytes,5,opt,name=website,proto3" json:"website,omitempty"`
	// token
	CoingeckoId   string `protobuf:"bytes,6,opt,name=coingecko_id,json=coingeckoId,proto3" json:"coingecko_id,omitempty"`
	CoinImageLink string `protobuf:"bytes,7,opt,name=coin_image_link,json=coinImageLink,proto3" json:"coin_image_link,omitempty"`
	// other
	Constitution string           `protobuf:"bytes,8,opt,name=constitution,proto3" json:"constitution,omitempty"`
	Other        []*ChainSpecific `protobuf:"bytes,9,rep,name=other,proto3" json:"other,omitempty"`
}

func (m *Params) Reset()         { *m = Params{} }
func (m *Params) String() string { return proto.CompactTextString(m) }
func (*Params) ProtoMessage()    {}
func (*Params) Descriptor() ([]byte, []int) {
	return fileDescriptor_7d37f040ef7097f5, []int{1}
}
func (m *Params) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Params) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Params.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Params) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Params.Merge(m, src)
}
func (m *Params) XXX_Size() int {
	return m.Size()
}
func (m *Params) XXX_DiscardUnknown() {
	xxx_messageInfo_Params.DiscardUnknown(m)
}

var xxx_messageInfo_Params proto.InternalMessageInfo

func (m *Params) GetTwitter() string {
	if m != nil {
		return m.Twitter
	}
	return ""
}

func (m *Params) GetTelegram() string {
	if m != nil {
		return m.Telegram
	}
	return ""
}

func (m *Params) GetDiscord() string {
	if m != nil {
		return m.Discord
	}
	return ""
}

func (m *Params) GetGithub() string {
	if m != nil {
		return m.Github
	}
	return ""
}

func (m *Params) GetWebsite() string {
	if m != nil {
		return m.Website
	}
	return ""
}

func (m *Params) GetCoingeckoId() string {
	if m != nil {
		return m.CoingeckoId
	}
	return ""
}

func (m *Params) GetCoinImageLink() string {
	if m != nil {
		return m.CoinImageLink
	}
	return ""
}

func (m *Params) GetConstitution() string {
	if m != nil {
		return m.Constitution
	}
	return ""
}

func (m *Params) GetOther() []*ChainSpecific {
	if m != nil {
		return m.Other
	}
	return nil
}

func init() {
	proto.RegisterType((*ChainSpecific)(nil), "cosmos.metadata.v1.ChainSpecific")
	proto.RegisterType((*Params)(nil), "cosmos.metadata.v1.Params")
}

func init() { proto.RegisterFile("cosmos/metadata/v1/metadata.proto", fileDescriptor_7d37f040ef7097f5) }

var fileDescriptor_7d37f040ef7097f5 = []byte{
	// 370 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x91, 0xc1, 0x4a, 0xeb, 0x40,
	0x14, 0x86, 0x9b, 0xf4, 0x36, 0x6d, 0xa7, 0xb7, 0xf7, 0xe2, 0x20, 0x32, 0x14, 0x09, 0x4d, 0x17,
	0x52, 0x84, 0x26, 0x54, 0x11, 0xc1, 0xa5, 0x2e, 0xa4, 0xe0, 0x42, 0xea, 0xce, 0x4d, 0x99, 0x66,
	0xc6, 0xf4, 0x90, 0x26, 0x53, 0x32, 0xd3, 0x56, 0x5f, 0xc1, 0x95, 0x8f, 0xe2, 0x63, 0xb8, 0xec,
	0x46, 0x70, 0x29, 0xed, 0xc2, 0xd7, 0x90, 0x64, 0x62, 0xa4, 0xe8, 0x66, 0x98, 0xef, 0x3f, 0xff,
	0x7f, 0x16, 0xff, 0x41, 0x8e, 0x2f, 0x64, 0x24, 0xa4, 0x17, 0x71, 0x45, 0x19, 0x55, 0xd4, 0x5b,
	0xf4, 0x8b, 0xbf, 0x3b, 0x4b, 0x84, 0x12, 0x18, 0x6b, 0x8b, 0x5b, 0xc8, 0x8b, 0x7e, 0x6b, 0x87,
	0x46, 0x10, 0x0b, 0x2f, 0x7b, 0xb5, 0xad, 0x73, 0x82, 0x9a, 0x17, 0x13, 0x0a, 0xf1, 0xcd, 0x8c,
	0xfb, 0x70, 0x07, 0x3e, 0xfe, 0x87, 0x4c, 0x60, 0xc4, 0x68, 0x1b, 0xdd, 0xfa, 0xd0, 0x04, 0x86,
	0x77, 0x51, 0x65, 0x41, 0xa7, 0x73, 0x4e, 0xcc, 0x4c, 0xd2, 0xd0, 0x79, 0x35, 0x91, 0x75, 0x4d,
	0x13, 0x1a, 0x49, 0x4c, 0x50, 0x55, 0x2d, 0x41, 0x29, 0x9e, 0xe4, 0xa9, 0x2f, 0xc4, 0x2d, 0x54,
	0x53, 0x7c, 0xca, 0x83, 0x84, 0x46, 0x79, 0xba, 0xe0, 0x34, 0xc5, 0x40, 0xfa, 0x22, 0x61, 0xa4,
	0xac, 0x53, 0x39, 0xe2, 0x3d, 0x64, 0x05, 0xa0, 0x26, 0xf3, 0x31, 0xf9, 0x93, 0x0d, 0x72, 0x4a,
	0x13, 0x4b, 0x3e, 0x96, 0xa0, 0x38, 0xa9, 0xe8, 0x44, 0x8e, 0xd8, 0x41, 0x7f, 0x7d, 0x01, 0x71,
	0xc0, 0xfd, 0x50, 0x8c, 0x80, 0x11, 0x2b, 0x1b, 0x37, 0x0a, 0x6d, 0xc0, 0xf0, 0x01, 0xfa, 0x9f,
	0xe2, 0x08, 0x22, 0x1a, 0xf0, 0xd1, 0x14, 0xe2, 0x90, 0x54, 0x33, 0x57, 0x33, 0x95, 0x07, 0xa9,
	0x7a, 0x05, 0x71, 0x88, 0x3b, 0xe9, 0xaa, 0x58, 0x2a, 0x50, 0x73, 0x05, 0x22, 0x26, 0xb5, 0xcc,
	0xb4, 0xa5, 0xe1, 0x53, 0x54, 0x11, 0x6a, 0xc2, 0x13, 0x52, 0x6f, 0x97, 0xbb, 0x8d, 0x23, 0xc7,
	0xfd, 0xd9, 0xb4, 0xbb, 0xd5, 0xe9, 0x50, 0xfb, 0xcf, 0x9c, 0xc7, 0x8f, 0xe7, 0xc3, 0x7d, 0xed,
	0xee, 0x49, 0x16, 0x7a, 0xf7, 0xdf, 0x07, 0xd4, 0x65, 0x9e, 0x5f, 0xbe, 0xac, 0x6d, 0x63, 0xb5,
	0xb6, 0x8d, 0xf7, 0xb5, 0x6d, 0x3c, 0x6d, 0xec, 0xd2, 0x6a, 0x63, 0x97, 0xde, 0x36, 0x76, 0xe9,
	0xb6, 0xa7, 0x6b, 0x70, 0x7d, 0x11, 0x79, 0xf9, 0xf5, 0x7f, 0xdf, 0xa4, 0x1e, 0x66, 0x5c, 0x8e,
	0xad, 0xec, 0xbc, 0xc7, 0x9f, 0x01, 0x00, 0x00, 0xff, 0xff, 0xc7, 0x8b, 0xb0, 0xdb, 0x2a, 0x02,
	0x00, 0x00,
}

func (m *ChainSpecific) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ChainSpecific) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ChainSpecific) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Value) > 0 {
		i -= len(m.Value)
		copy(dAtA[i:], m.Value)
		i = encodeVarintMetadata(dAtA, i, uint64(len(m.Value)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Id) > 0 {
		i -= len(m.Id)
		copy(dAtA[i:], m.Id)
		i = encodeVarintMetadata(dAtA, i, uint64(len(m.Id)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *Params) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Params) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Params) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Other) > 0 {
		for iNdEx := len(m.Other) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Other[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintMetadata(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x4a
		}
	}
	if len(m.Constitution) > 0 {
		i -= len(m.Constitution)
		copy(dAtA[i:], m.Constitution)
		i = encodeVarintMetadata(dAtA, i, uint64(len(m.Constitution)))
		i--
		dAtA[i] = 0x42
	}
	if len(m.CoinImageLink) > 0 {
		i -= len(m.CoinImageLink)
		copy(dAtA[i:], m.CoinImageLink)
		i = encodeVarintMetadata(dAtA, i, uint64(len(m.CoinImageLink)))
		i--
		dAtA[i] = 0x3a
	}
	if len(m.CoingeckoId) > 0 {
		i -= len(m.CoingeckoId)
		copy(dAtA[i:], m.CoingeckoId)
		i = encodeVarintMetadata(dAtA, i, uint64(len(m.CoingeckoId)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.Website) > 0 {
		i -= len(m.Website)
		copy(dAtA[i:], m.Website)
		i = encodeVarintMetadata(dAtA, i, uint64(len(m.Website)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.Github) > 0 {
		i -= len(m.Github)
		copy(dAtA[i:], m.Github)
		i = encodeVarintMetadata(dAtA, i, uint64(len(m.Github)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Discord) > 0 {
		i -= len(m.Discord)
		copy(dAtA[i:], m.Discord)
		i = encodeVarintMetadata(dAtA, i, uint64(len(m.Discord)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Telegram) > 0 {
		i -= len(m.Telegram)
		copy(dAtA[i:], m.Telegram)
		i = encodeVarintMetadata(dAtA, i, uint64(len(m.Telegram)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Twitter) > 0 {
		i -= len(m.Twitter)
		copy(dAtA[i:], m.Twitter)
		i = encodeVarintMetadata(dAtA, i, uint64(len(m.Twitter)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintMetadata(dAtA []byte, offset int, v uint64) int {
	offset -= sovMetadata(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *ChainSpecific) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Id)
	if l > 0 {
		n += 1 + l + sovMetadata(uint64(l))
	}
	l = len(m.Value)
	if l > 0 {
		n += 1 + l + sovMetadata(uint64(l))
	}
	return n
}

func (m *Params) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Twitter)
	if l > 0 {
		n += 1 + l + sovMetadata(uint64(l))
	}
	l = len(m.Telegram)
	if l > 0 {
		n += 1 + l + sovMetadata(uint64(l))
	}
	l = len(m.Discord)
	if l > 0 {
		n += 1 + l + sovMetadata(uint64(l))
	}
	l = len(m.Github)
	if l > 0 {
		n += 1 + l + sovMetadata(uint64(l))
	}
	l = len(m.Website)
	if l > 0 {
		n += 1 + l + sovMetadata(uint64(l))
	}
	l = len(m.CoingeckoId)
	if l > 0 {
		n += 1 + l + sovMetadata(uint64(l))
	}
	l = len(m.CoinImageLink)
	if l > 0 {
		n += 1 + l + sovMetadata(uint64(l))
	}
	l = len(m.Constitution)
	if l > 0 {
		n += 1 + l + sovMetadata(uint64(l))
	}
	if len(m.Other) > 0 {
		for _, e := range m.Other {
			l = e.Size()
			n += 1 + l + sovMetadata(uint64(l))
		}
	}
	return n
}

func sovMetadata(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozMetadata(x uint64) (n int) {
	return sovMetadata(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *ChainSpecific) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMetadata
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ChainSpecific: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ChainSpecific: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMetadata
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMetadata
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMetadata
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Id = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Value", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMetadata
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMetadata
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMetadata
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Value = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMetadata(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMetadata
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Params) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMetadata
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Params: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Params: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Twitter", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMetadata
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMetadata
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMetadata
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Twitter = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Telegram", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMetadata
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMetadata
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMetadata
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Telegram = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Discord", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMetadata
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMetadata
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMetadata
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Discord = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Github", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMetadata
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMetadata
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMetadata
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Github = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Website", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMetadata
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMetadata
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMetadata
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Website = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CoingeckoId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMetadata
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMetadata
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMetadata
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CoingeckoId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CoinImageLink", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMetadata
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMetadata
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMetadata
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CoinImageLink = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constitution", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMetadata
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMetadata
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMetadata
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Constitution = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Other", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMetadata
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMetadata
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMetadata
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Other = append(m.Other, &ChainSpecific{})
			if err := m.Other[len(m.Other)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMetadata(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMetadata
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipMetadata(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowMetadata
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowMetadata
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowMetadata
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthMetadata
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupMetadata
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthMetadata
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthMetadata        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowMetadata          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupMetadata = fmt.Errorf("proto: unexpected end of group")
)
